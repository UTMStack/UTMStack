# CISCO ASA filter, version 3.0.0
# Based on examples provided and https://www.cisco.com/c/en/us/td/docs/security/asa/syslog/b_syslog.html
# Filter Input requirements -> Syslog
#
# 1. Parsing the message field containing the Cisco ASA log
pipeline:
  - dataTypes:
      - firewall-cisco-asa
    steps:
      # Common ASA fields
      - grok:
          patterns:
            - fieldName: log.syslogPri
              pattern: '(\<{{.integer}}\>)'
            - fieldName: log.ciscoTime
              pattern: '({{.day}}\s)?{{.monthName}}\s{{.monthDay}}\s{{.year}}\s{{.time}}'
            - fieldName: local.ip
              pattern: '{{.ipv4}}|{{.ipv6}}|{{.hostname}}'
            - fieldName: log.asaHeader
              pattern: '{{.data}}ASA-'
            - fieldName: log.severity
              pattern: '{{.integer}}'
            - fieldName: log.messageId
              pattern: '-{{.integer}}'
            - fieldName: log.ciscoSeparator
              pattern: '\:{{.space}}'
            - fieldName: log.msg
              pattern: '{{.greedy}}'
          source: raw
      - grok:
          patterns:
            - fieldName: log.ciscoTime
              pattern: '({{.day}}\s)?{{.monthName}}\s{{.monthDay}}\s{{.year}}\s{{.time}}'
            - fieldName: local.ip
              pattern: '{{.ipv4}}|{{.ipv6}}|{{.hostname}}'
            - fieldName: log.asaHeader
              pattern: '{{.data}}ASA-'
            - fieldName: log.severity
              pattern: '{{.integer}}'
            - fieldName: log.messageId
              pattern: '-{{.integer}}'
            - fieldName: log.ciscoSeparator
              pattern: '\:{{.space}}'
            - fieldName: log.msg
              pattern: '{{.greedy}}'
          source: raw
      # Removing unwanted prefixes
      - trim:
          function: prefix
          substring: '-'
          fields:
            - log.messageId
      # Field conversions
      - cast:
          fields:
            - log.messageId
          to: int
      # Begining specific message parsing
      #......................................................................#
      # ASA-2-106001
      - grok:
          patterns:
            - fieldName: log.direction
              pattern: '{{.word}}'
            - fieldName: protocol
              pattern: '{{.word}}'
            - fieldName: log.irrelevant
              pattern: 'connection'
            - fieldName: actionResult
              pattern: '{{.word}}'
            - fieldName: log.irrelevant
              pattern: 'from'
            - fieldName: from.ip
              pattern: '({{.ipv4}}|{{.ipv6}})'
            - fieldName: from.port
              pattern: '/{{.integer}}'
            - fieldName: log.irrelevant
              pattern: 'to'
            - fieldName: to.ip
              pattern: '({{.ipv4}}|{{.ipv6}})'
            - fieldName: to.port
              pattern: '/{{.integer}}'
            - fieldName: log.irrelevant
              pattern: 'flags'
            - fieldName: log.flags
              pattern: '{{.data}}\s'
            - fieldName: log.irrelevant
              pattern: 'on\sinterface'
            - fieldName: log.srcInterface
              pattern: '{{.greedy}}'
          source: log.msg

      - trim:
          function: prefix
          substring: '/'
          fields:
            - from.port
            - to.port

      #......................................................................#
      #ASA-2-106017
      - grok:
          patterns:
            - fieldName: actionResult
              pattern: '{{.word}}'
            - fieldName: log.irrelevant
              pattern: 'IP\sdue\sto'
            - fieldName: action
              pattern: '{{.greedy}}from'
            - fieldName: from.ip
              pattern: '({{.ipv4}}|{{.ipv6}})'
            - fieldName: log.irrelevant
              pattern: 'to'
            - fieldName: to.ip
              pattern: '({{.ipv4}}|{{.ipv6}})'
          source: log.msg
      - trim:
          function: suffix
          substring: 'from'
          fields:
            - action
      #......................................................................#
      # ASA-1-106021
      - grok:
          patterns:
            - fieldName: actionResult
              pattern: '{{.word}}'
            - fieldName: action
              pattern: '{{.greedy}}from'
            - fieldName: from.ip
              pattern: '({{.ipv4}}|{{.ipv6}})'
            - fieldName: log.irrelevant
              pattern: 'to'
            - fieldName: to.ip
              pattern: '({{.ipv4}}|{{.ipv6}})'
            - fieldName: log.irrelevant
              pattern: 'on\sinterface'
            - fieldName: log.srcInterface
              pattern: '{{.greedy}}'
          source: log.msg
      - trim:
          function: suffix
          substring: 'from'
          fields:
            - action
      
      #......................................................................#
      # ASA-2-106101
      - grok:
          patterns:
            - fieldName: action
              pattern: 'Number of cached deny-flows for ACL log has reached limit'
            - fieldName: log.rest
              pattern: '{{.greedy}}'
          source: log.msg
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: 'Number of cached'
            - fieldName: actionResult
              pattern: '{{.word}}'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: action
      # Parsing the limit number
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '\('
            - fieldName: log.numFlows
              pattern: '{{.integer}}'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.rest
      # Field conversions
      - cast:
          fields:
            - log.numFlows
          to: int
      
      #......................................................................#
      # ASA-6-106102,106103
      # First variant
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: 'access-list'
            - fieldName: log.accessList
              pattern: '{{.data}}\s'
            - fieldName: action
              pattern: '{{.word}}'
            - fieldName: protocol
              pattern: '{{.word}}'
            - fieldName: log.irrelevant
              pattern: 'for user'
            - fieldName: from.user
              pattern: '(''{{.data}}''|{{.data}})\s'
            - fieldName: log.srcInterface
              pattern: '{{.data}}/'
            - fieldName: from.ip
              pattern: '({{.ipv4}}|{{.ipv6}})'
            - fieldName: from.port
              pattern: '{{.integer}}'
            - fieldName: log.dstInterface
              pattern: '{{.data}}/'
            - fieldName: to.ip
              pattern: '({{.ipv4}}|{{.ipv6}})'
            - fieldName: to.port
              pattern: '{{.integer}}'
            - fieldName: log.irrelevant
              pattern: 'hit-cnt'
            - fieldName: log.hitCount
              pattern: '{{.integer}}'
            - fieldName: log.rest
              pattern: '{{.greedy}}'
          source: log.msg
      # Second variant
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: 'access-list'
            - fieldName: log.accessList
              pattern: '{{.data}}\s'
            - fieldName: action
              pattern: '{{.word}}'
            - fieldName: protocol
              pattern: '{{.word}}'
            - fieldName: log.irrelevant
              pattern: 'for user'
            - fieldName: from.user
              pattern: '(''{{.data}}''|{{.data}})\s'
            - fieldName: log.srcInterface
              pattern: '{{.data}}/'
            - fieldName: from.ip
              pattern: '({{.ipv4}}|{{.ipv6}})'
            - fieldName: from.port
              pattern: '\({{.data}}\)'
            - fieldName: log.irrelevant
              pattern: '-\>'
            - fieldName: log.dstInterface
              pattern: '{{.data}}/'
            - fieldName: to.ip
              pattern: '({{.ipv4}}|{{.ipv6}})'
            - fieldName: to.port
              pattern: '\({{.data}}\)'
            - fieldName: log.irrelevant
              pattern: 'hit-cnt'
            - fieldName: log.hitCount
              pattern: '{{.integer}}'
            - fieldName: log.rest
              pattern: '{{.greedy}}'
          source: log.msg
      - trim:
          function: suffix
          substring: '/'
          fields:
            - log.srcInterface
            - log.dstInterface
      - trim:
          function: prefix
          substring: ''''
          fields:
            - from.user
      - trim:
          function: suffix
          substring: ''''
          fields:
            - from.user
      - trim:
          function: prefix
          substring: '('
          fields:
            - from.port
            - to.port
      - trim:
          function: suffix
          substring: ')'
          fields:
            - from.port
            - to.port
      #......................................................................#
      # ASA-4-109017
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: 'User at'
            - fieldName: from.ip
              pattern: '({{.ipv4}}|{{.ipv6}})'
            - fieldName: log.irrelevant
              pattern: 'exceeded auth proxy connection limit'
            - fieldName: log.limit
              pattern: '\({{.integer}}'
            - fieldName: log.rest
              pattern: '{{.greedy}}'
          source: log.msg

      - trim:
          function: prefix
          substring: '('
          fields:
            - log.limit
      - cast:
          fields:
            - log.limit
          to: int
      #......................................................................#
      # ASA-6-109101
      - grok:
          patterns:
            - fieldName: action
              pattern: 'Received CoA disconnect request'
            - fieldName: log.irrelevant
              pattern: 'from'
            - fieldName: from.ip
              pattern: '{{.ipv4}}|{{.ipv6}}|{{.hostname}}'
            - fieldName: log.irrelevant
              pattern: 'for user'
            - fieldName: from.user
              pattern: '(''{{.data}}''|{{.data}}),'
            - fieldName: log.irrelevant
              pattern: 'with\saudit-session-id:'
            - fieldName: log.auditSessionId
              pattern: '{{.greedy}}'
          source: log.msg
      # Action result
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: 'Received CoA'
            - fieldName: actionResult
              pattern: '{{.word}}'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: action
      - trim:
          function: suffix
          substring: ','
          fields:
            - from.user
      #......................................................................#
      # ASA-4-109102
      - grok:
          patterns:
            - fieldName: action
              pattern: 'Received CoA {{.word}}'
            - fieldName: log.irrelevant
              pattern: 'from'
            - fieldName: from.ip
              pattern: '{{.ipv4}}|{{.ipv6}}|{{.hostname}}'
            - fieldName: log.irrelevant
              pattern: ', but cannot find named session'
            - fieldName: log.auditSessionId
              pattern: '{{.greedy}}'
          source: log.msg
      # Action result
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: 'Received CoA'
            - fieldName: actionResult
              pattern: '{{.greedy}}'
          source: action
      #......................................................................#
      # ASA-3-109103
      - grok:
          patterns:
            - fieldName: action
              pattern: 'CoA {{.word}}'
            - fieldName: log.irrelevant
              pattern: 'from'
            - fieldName: from.ip
              pattern: '{{.ipv4}}|{{.ipv6}}|{{.hostname}}'
            - fieldName: log.irrelevant
              pattern: 'failed for user'
            - fieldName: from.user
              pattern: '(''{{.data}}''|{{.data}}),'
            - fieldName: log.irrelevant
              pattern: 'with session ID:'
            - fieldName: log.auditSessionId
              pattern: '{{.greedy}}'
          source: log.msg
      # Action result
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: 'CoA'
            - fieldName: actionResult
              pattern: '{{.greedy}}'
          source: action
      - trim:
          function: suffix
          substring: ','
          fields:
            - from.user
      #......................................................................#
      # ASA-109201 to 109213
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: 'UAUTH(:)? Session(\s|=)'
            - fieldName: log.session
              pattern: '{{.data}},'
            - fieldName: log.irrelevant
              pattern: 'User(\s|=)'
            - fieldName: from.user
              pattern: '{{.data}},'
            - fieldName: log.irrelevant
              pattern: 'Assigned IP(\s|=)'
            - fieldName: from.ip
              pattern: '{{.ipv4}}|{{.ipv6}}|{{.hostname}}'
            - fieldName: log.irrelevant
              pattern: ','
            - fieldName: action
              pattern: '{{.greedy}}'
          source: log.msg
      - trim:
          function: suffix
          substring: ','
          fields:
            - log.session
            - from.user
      #......................................................................#
      # ASA-6-113004
      - grok:
          patterns:
            - fieldName: action
              pattern: 'AAA user {{.word}} Successful'
            - fieldName: log.irrelevant
              pattern: '\:'
            - fieldName: log.irrelevant
              pattern: 'server(\s)?=(\s)?'
            - fieldName: to.ip
              pattern: '{{.data}}(\:|,)'
            - fieldName: log.irrelevant
              pattern: '(U|u)ser(\s)?=(\s)?'
            - fieldName: from.user
              pattern: '{{.greedy}}'
          source: log.msg
      # Action result
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: 'AAA user {{.word}}'
            - fieldName: actionResult
              pattern: '{{.greedy}}'
          source: action
      - trim:
          function: suffix
          substring: ':'
          fields:
            - to.ip
      - trim:
          function: suffix
          substring: ','
          fields:
            - to.ip
      #......................................................................#
      # ASA-6-113005
      - grok:
          patterns:
            - fieldName: action
              pattern: 'AAA user authentication Rejected(\s)?'
            - fieldName: log.irrelevant
              pattern: '\:(\s)?reason(\s)?=(\s)'
            - fieldName: log.reason
              pattern: '{{.data}}(\:|,)'
            - fieldName: log.irrelevant
              pattern: '(server|Server)(\s)?=(\s)?'
            - fieldName: to.ip
              pattern: '{{.data}}(\:|,)'
            - fieldName: log.irrelevant
              pattern: '(U|u)ser(\s)?=(\s)?'
            - fieldName: from.user
              pattern: '{{.data}}(\:|,)'
            - fieldName: log.irrelevant
              pattern: '(U|u)ser IP(\s)?=(\s)?'
            - fieldName: from.ip
              pattern: '{{.greedy}}'
          source: log.msg
      # Action result
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: 'AAA user authentication'
            - fieldName: actionResult
              pattern: '{{.greedy}}'
          source: action
      - trim:
          function: suffix
          substring: ':'
          fields:
            - log.reason
            - to.ip
            - from.user
      #......................................................................#
      # ASA-6-113008
      - grok:
          patterns:
            - fieldName: action
              pattern: 'AAA transaction status ACCEPT(\s)?'
            - fieldName: log.irrelevant
              pattern: '\:(\s)?(u|U)ser(\s)?=(\s)?'
            - fieldName: from.user
              pattern: '{{.greedy}}'
          source: log.msg
      #......................................................................#
      # ASA-6-113009
      # First variant
      - grok:
          patterns:
            - fieldName: action
              pattern: 'AAA retrieved default group policy'
            - fieldName: log.policy
              pattern: '\({{.data}}\)'
            - fieldName: log.irrelevant
              pattern: 'for (u|U)ser(\s)?=(\s)?'
            - fieldName: from.user
              pattern: '{{.greedy}}'
          source: log.msg
      - trim:
          function: prefix
          substring: '('
          fields:
            - log.policy
      - trim:
          function: suffix
          substring: ')'
          fields:
            - log.policy
      # Second variant
      - grok:
          patterns:
            - fieldName: action
              pattern: 'AAA retrieved default group policy'
            - fieldName: log.policy
              pattern: '{{.data}}\sfor'
            - fieldName: log.irrelevant
              pattern: '(u|U)ser(\s)?'
            - fieldName: from.user
              pattern: '{{.greedy}}'
          source: log.msg
      - trim:
          function: suffix
          substring: 'for'
          fields:
            - log.policy
      #......................................................................#
      # ASA-6-113010
      - grok:
          patterns:
            - fieldName: action
              pattern: 'AAA challenge received for user'
            - fieldName: from.user
              pattern: '(''{{.data}}''|{{.data}}) from server'
            - fieldName: from.ip
              pattern: '{{.greedy}}'
          source: log.msg
      - trim:
          function: suffix
          substring: 'from server'
          fields:
            - from.user
      #......................................................................#
      # ASA-6-113011
      # First variant
      - grok:
          patterns:
            - fieldName: action
              pattern: 'AAA retrieved user specific group policy'
            - fieldName: log.policy
              pattern: '\({{.data}}\)'
            - fieldName: log.irrelevant
              pattern: 'for (u|U)ser(\s)?=(\s)?'
            - fieldName: from.user
              pattern: '{{.greedy}}'
          source: log.msg
      - trim:
          function: prefix
          substring: '('
          fields:
            - log.policy
      - trim:
          function: suffix
          substring: ')'
          fields:
            - log.policy
      # Second variant
      - grok:
          patterns:
            - fieldName: action
              pattern: 'AAA retrieved user specific group policy'
            - fieldName: log.policy
              pattern: '{{.data}}\sfor'
            - fieldName: log.irrelevant
              pattern: '(u|U)ser(\s)?'
            - fieldName: from.user
              pattern: '{{.greedy}}'
          source: log.msg
      - trim:
          function: suffix
          substring: 'for'
          fields:
            - log.policy
      #......................................................................#
      # ASA-6-113012
      - grok:
          patterns:
            - fieldName: action
              pattern: 'AAA user authentication Successful(\s)?'
            - fieldName: log.irrelevant
              pattern: '\:(\s)?local database(\s)?:(\s)?user(\s)?=(\s)?'
            - fieldName: from.user
              pattern: '{{.greedy}}'
          source: log.msg
      # Action result
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: 'AAA user authentication'
            - fieldName: actionResult
              pattern: '{{.greedy}}'
          source: action
      #......................................................................#
      # ASA-6-113013
      - grok:
          patterns:
            - fieldName: action
              pattern: 'AAA unable to complete the request'
            - fieldName: log.irrelevant
              pattern: 'Error(\s)?:(\s)?reason(\s)?=(\s)?'
            - fieldName: log.reason
              pattern: '{{.data}}\:'
            - fieldName: log.irrelevant
              pattern: 'user(\s)?=(\s)?'
            - fieldName: from.user
              pattern: '{{.greedy}}'
          source: log.msg
      - trim:
          function: suffix
          substring: ':'
          fields:
            - log.reason
      #......................................................................#
      # ASA-6-113014
      - grok:
          patterns:
            - fieldName: action
              pattern: 'AAA authentication server not accessible(\s)?'
            - fieldName: log.irrelevant
              pattern: '\:(\s)?server(\s)?=(\s)?'
            - fieldName: to.ip
              pattern: '{{.ipv4}}|{{.ipv6}}|{{.hostname}}'
            - fieldName: log.irrelevant
              pattern: '\:(\s)?(U|u)ser(\s)?=(\s)?'
            - fieldName: from.user
              pattern: '{{.greedy}}'
          source: log.msg
      #......................................................................#
      # ASA-6-113015, 113017
      - grok:
          patterns:
            - fieldName: action
              pattern: '(AAA user authentication|AAA credentials)\s(R|r)ejected(\s)?'
            - fieldName: log.irrelevant
              pattern: '\:(\s)?reason(\s)?=(\s)?'
            - fieldName: log.reason
              pattern: '{{.data}}(\s)?\:'
            - fieldName: log.irrelevant
              pattern: 'local database(\s)?:(\s)?(U|u)ser(\s)?=(\s)?'
            - fieldName: from.user
              pattern: '(''{{.data}}''|{{.data}})(\s)?:'
            - fieldName: log.irrelevant
              pattern: 'user IP(\s)?=(\s)?'
            - fieldName: to.ip
              pattern: '{{.greedy}}'
          source: log.msg
      - trim:
          function: suffix
          substring: ':'
          fields:
            - log.reason
            - from.user
      # Action result
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '(AAA user authentication|AAA credentials)\s'
            - fieldName: actionResult
              pattern: '{{.greedy}}'
          source: action
      #......................................................................#
      # ASA-6-113016
      - grok:
          patterns:
            - fieldName: action
              pattern: 'AAA credentials rejected(\s)?'
            - fieldName: log.irrelevant
              pattern: '\:(\s)?reason(\s)?=(\s)?'
            - fieldName: log.reason
              pattern: '{{.data}}(\s)?\:'
            - fieldName: log.irrelevant
              pattern: 'server(\s)?=(\s)?'
            - fieldName: to.ip
              pattern: '{{.data}}(\s)?\:'
            - fieldName: log.irrelevant
              pattern: '(U|u)ser(\s)?=(\s)?'
            - fieldName: from.user
              pattern: '(''{{.data}}''|{{.data}})(\s)?:'
            - fieldName: log.irrelevant
              pattern: 'user IP(\s)?=(\s)?'
            - fieldName: from.ip
              pattern: '{{.greedy}}'
          source: log.msg
      - trim:
          function: suffix
          substring: ':'
          fields:
            - log.reason
            - to.ip
            - from.user
      # Action result
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: 'AAA credentials'
            - fieldName: actionResult
              pattern: '{{.greedy}}'
          source: action
      #......................................................................#
      # ASA-4-113019
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: 'Group(\s)?=(\s)?'
            - fieldName: from.group
              pattern: '{{.data}}(\s)?,'
            - fieldName: log.irrelevant
              pattern: '(U|u)sername(\s)?=(\s)?'
            - fieldName: from.user
              pattern: '(''{{.data}}''|{{.data}})(\s)?,'
            - fieldName: log.irrelevant
              pattern: 'IP(\s)?=(\s)?'
            - fieldName: from.ip
              pattern: '{{.data}},'
            - fieldName: action
              pattern: '(\s)?Session disconnected\.'
            - fieldName: log.irrelevant
              pattern: '(\s)?Session Type:(\s)?'
            - fieldName: log.sessionType
              pattern: '{{.data}},'
            - fieldName: log.irrelevant
              pattern: '(\s)?Duration:(\s)?'
            - fieldName: log.duration
              pattern: '{{.data}},'
            - fieldName: log.irrelevant
              pattern: '(\s)?Bytes xmt:(\s)?'
            - fieldName: from.bytesSent
              pattern: '{{.data}},'
            - fieldName: log.irrelevant
              pattern: '(\s)?Bytes rcv:(\s)?'
            - fieldName: from.bytesReceived
              pattern: '{{.data}},'
            - fieldName: log.irrelevant
              pattern: '(\s)?Reason:(\s)?'
            - fieldName: log.reason
              pattern: '{{.greedy}}'
          source: log.msg
      - trim:
          function: suffix
          substring: ','
          fields:
            - from.group
            - from.user
            - from.ip
            - log.sessionType
            - log.duration
            - from.bytesSent
            - from.bytesReceived
      - cast:
          fields:
            - from.bytesSent
            - from.bytesReceived
          to: int
      #......................................................................#
      # ASA-113031,113032,113033
      # Common fields
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: 'Group(\s)?'
            - fieldName: from.group
              pattern: '{{.data}}\sUser'
            - fieldName: from.user
              pattern: '(''{{.data}}''|{{.data}})(\s)?IP'
            - fieldName: from.ip
              pattern: '{{.ipv4}}|{{.ipv6}}|{{.hostname}}'
            - fieldName: log.rest
              pattern: '{{.greedy}}'
          source: log.msg
      - trim:
          function: suffix
          substring: 'User'
          fields:
            - from.group
      - trim:
          function: suffix
          substring: 'IP'
          fields:
            - from.user
      # Specific fields
      - grok:
          patterns:
            - fieldName: action
              pattern: 'AnyConnect (vpn-filter|ipv6-vpn-filter|session not allowed)'
            - fieldName: log.filter
              pattern: '{{.data}}\sis'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.rest
      - grok:
          patterns:
            - fieldName: action
              pattern: 'AnyConnect (vpn-filter|ipv6-vpn-filter|session not allowed)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.rest
      - trim:
          function: suffix
          substring: 'is'
          fields:
            - log.filter
      #......................................................................#
      # ASA-113034,113035,113036,113038,113039
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: 'Group(\s)?'
            - fieldName: from.group
              pattern: '(\<)?{{.data}}(\>)?\sUser'
            - fieldName: from.user
              pattern: '(''{{.data}}''|(\<)?{{.data}}(\>)?)(\s)?IP'
            - fieldName: from.ip
              pattern: '(\<)?({{.ipv4}}|{{.ipv6}}|{{.hostname}})(\>)?'
            - fieldName: log.rest
              pattern: '{{.greedy}}'
          source: log.msg
      # Cleaning fields
      - trim:
          function: suffix
          substring: 'User'
          fields:
            - from.group
      - trim:
          function: suffix
          substring: 'IP'
          fields:
            - from.user
      - trim:
          function: prefix
          substring: '<'
          fields:
            - from.group
            - from.user
            - from.ip
      - trim:
          function: suffix
          substring: '>'
          fields:
            - from.group
            - from.user
            - from.ip
      #......................................................................#
      # ASA-4-113042
      - grok:
          patterns:
            - fieldName: action
              pattern: 'CoA: Non-HTTP connection from'
            - fieldName: log.srcInterface
              pattern: '{{.data}}(\s)?:'
            - fieldName: from.ip
              pattern: '({{.ipv4}}|{{.ipv6}}|{{.hostname}})(\s)?/'
            - fieldName: from.port
              pattern: '{{.integer}}'
            - fieldName: log.irrelevant
              pattern: 'to'
            - fieldName: log.dstInterface
              pattern: '{{.data}}(\s)?:'
            - fieldName: to.ip
              pattern: '({{.ipv4}}|{{.ipv6}}|{{.hostname}})(\s)?/'
            - fieldName: to.port
              pattern: '{{.integer}}'
            - fieldName: log.irrelevant
              pattern: 'for user'
            - fieldName: remote.user
              pattern: '(''{{.data}}''|{{.data}})(\s)?at'
            - fieldName: remote.ip
              pattern: '({{.ipv4}}|{{.ipv6}}|{{.hostname}})'
            - fieldName: actionResult
              pattern: '{{.word}}'
            - fieldName: log.rest
              pattern: '{{.greedy}}'
          source: log.msg
      - trim:
          function: suffix
          substring: 'from'
          fields:
            - action
      - trim:
          function: suffix
          substring: ':'
          fields:
            - log.srcInterface
            - log.dstInterface
      - trim:
          function: suffix
          substring: '/'
          fields:
            - from.ip
            - to.ip
      - trim:
          function: suffix
          substring: 'at'
          fields:
            - remote.user
      #......................................................................#
      # ASA-2-201003
      - grok:
          patterns:
            - fieldName: action
              pattern: 'Embryonic limit exceeded'
            - fieldName: log.numCons
              pattern: '{{.integer}}'
            - fieldName: log.irrelevant
              pattern: '/(\s)?'
            - fieldName: log.limit
              pattern: '{{.integer}}'
            - fieldName: log.irrelevant
              pattern: 'for'
            - fieldName: from.ip
              pattern: '({{.ipv4}}|{{.ipv6}}|{{.hostname}})'
            - fieldName: log.irrelevant
              pattern: '/(\s)?'
            - fieldName: from.port
              pattern: '{{.integer}}'
            - fieldName: log.globalIP
              pattern: '\({{.data}}\)'
            - fieldName: to.ip
              pattern: '({{.ipv4}}|{{.ipv6}}|{{.hostname}})'
            - fieldName: log.irrelevant
              pattern: '/(\s)?'
            - fieldName: to.port
              pattern: '{{.integer}}'
            - fieldName: log.irrelevant
              pattern: 'on interface'
            - fieldName: log.dstInterface
              pattern: '{{.greedy}}'
          source: log.msg
      - trim:
          function: prefix
          substring: '('
          fields:
            - log.globalIP
      - trim:
          function: suffix
          substring: ')'
          fields:
            - log.globalIP
      #......................................................................#
      # ASA-4-209003
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: 'Fragment database limit of'
            - fieldName: log.limit
              pattern: '{{.integer}}'
            - fieldName: log.irrelevant
              pattern: 'exceeded:(\s)?src(\s)?=(\s)?'
            - fieldName: from.ip
              pattern: '{{.data}},'
            - fieldName: log.irrelevant
              pattern: 'dest(\s)?=(\s)?'
            - fieldName: to.ip
              pattern: '{{.data}},'
            - fieldName: log.irrelevant
              pattern: 'proto(\s)?=(\s)?'
            - fieldName: protocol
              pattern: '{{.data}},'
            - fieldName: log.irrelevant
              pattern: 'id(\s)?=(\s)?'
            - fieldName: log.id
              pattern: '{{.greedy}}'
          source: log.msg
      - trim:
          function: suffix
          substring: ','
          fields:
            - from.ip
            - to.ip
            - protocol
      - cast:
          fields:
            - log.limit
          to: int
      #......................................................................#
      # Common field conversions
      - cast:
          fields:
            - from.port
            - to.port
          to: int
      # Removing unused fields
      - delete:
          fields:
            - log.asaHeader
            - log.ciscoSeparator
            - log.irrelevant
            - log.syslogPri
            - log.rest
