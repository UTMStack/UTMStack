# CISCO Firepower filter, version 3.0.0
# Based on examples provided and https://www.cisco.com/c/en/us/td/docs/security/firepower/Syslogs/b_fptd_syslog_guide.html
# Filter Input requirements -> Syslog
#
# 1. Parsing the message field containing the Cisco Firepower log
pipeline:
  - dataTypes:
      - firewall-cisco-firepower
    steps:
      # Common Firepower fields
      - grok:
          patterns:
            - fieldName: log.syslogPri
              pattern: '(\<{{.integer}}\>)'
            - fieldName: log.ciscoTime
              pattern: '{{.day}}\s{{.monthName}}\s{{.monthDay}}\s{{.year}}\s{{.time}}'
            - fieldName: local.ip
              pattern: '{{.ipv4}}|{{.ipv6}}|{{.hostname}}'
            - fieldName: log.asaHeader
              pattern: '{{.data}}FTD-'
            - fieldName: log.severity
              pattern: '{{.integer}}'
            - fieldName: log.messageId
              pattern: '-{{.integer}}'
            - fieldName: log.ciscoSeparator
              pattern: '\:{{.space}}'
            - fieldName: log.msg
              pattern: '{{.greedy}}'
          source: raw
      - grok:
          patterns:
            - fieldName: log.ciscoTime
              pattern: '{{.day}}\s{{.monthName}}\s{{.monthDay}}\s{{.year}}\s{{.time}}'
            - fieldName: local.ip
              pattern: '{{.ipv4}}|{{.ipv6}}|{{.hostname}}'
            - fieldName: log.firePowerHeader
              pattern: '{{.data}}FTD-'
            - fieldName: log.severity
              pattern: '{{.integer}}'
            - fieldName: log.messageId
              pattern: '-{{.integer}}'
            - fieldName: log.ciscoSeparator
              pattern: '\:{{.space}}'
            - fieldName: log.msg
              pattern: '{{.greedy}}'
          source: raw
      # Removing unwanted prefixes
      - trim:
          function: prefix
          substring: '-'
          fields:
            - log.messageId
      # Field conversions
      - cast:
          fields:
            - log.messageId
          to: int
      # Begining specific message parsing
      #......................................................................#
      # FTD-2-106001
      - grok:
          patterns:
            - fieldName: log.direction
              pattern: '{{.word}}'
            - fieldName: protocol
              pattern: '{{.word}}'
            - fieldName: log.irrelevant
              pattern: 'connection'
            - fieldName: actionResult
              pattern: '{{.word}}'
            - fieldName: log.irrelevant
              pattern: 'from'
            - fieldName: from.ip
              pattern: '({{.ipv4}}|{{.ipv6}})'
            - fieldName: from.port
              pattern: '/{{.integer}}'
            - fieldName: log.irrelevant
              pattern: 'to'
            - fieldName: to.ip
              pattern: '({{.ipv4}}|{{.ipv6}})'
            - fieldName: to.port
              pattern: '/{{.integer}}'
            - fieldName: log.irrelevant
              pattern: 'flags'
            - fieldName: log.flags
              pattern: '{{.data}}\s'
            - fieldName: log.irrelevant
              pattern: 'on\sinterface'
            - fieldName: log.srcInterface
              pattern: '{{.greedy}}'
          source: log.msg
          where:
            variables:
              - get: log.messageId
                as: msgId
                ofType: int
            expression: msgId==106001

      - trim:
          function: prefix
          substring: '/'
          fields:
            - from.port
            - to.port
          where:
            variables:
              - get: log.messageId
                as: msgId
                ofType: int
            expression: msgId==106001
      #......................................................................#
      # Decoding severity
      - add:
          function: 'string'
          params:
            key: log.severityLabel
            value: 'Alert'
          where:
            variables:
              - get: log.severity
                as: sev
                ofType: string
            expression: sev=="1"
      - add:
          function: 'string'
          params:
            key: log.severityLabel
            value: 'Critical'
          where:
            variables:
              - get: log.severity
                as: sev
                ofType: string
            expression: sev=="2"
      - add:
          function: 'string'
          params:
            key: log.severityLabel
            value: 'Error'
          where:
            variables:
              - get: log.severity
                as: sev
                ofType: string
            expression: sev=="3"
      - add:
          function: 'string'
          params:
            key: log.severityLabel
            value: 'Warning'
          where:
            variables:
              - get: log.severity
                as: sev
                ofType: string
            expression: sev=="4"
      - add:
          function: 'string'
          params:
            key: log.severityLabel
            value: 'Notification'
          where:
            variables:
              - get: log.severity
                as: sev
                ofType: string
            expression: sev=="5"
      - add:
          function: 'string'
          params:
            key: log.severityLabel
            value: 'Informational'
          where:
            variables:
              - get: log.severity
                as: sev
                ofType: string
            expression: sev=="6"
      - add:
          function: 'string'
          params:
            key: log.severityLabel
            value: 'Debugging'
          where:
            variables:
              - get: log.severity
                as: sev
                ofType: string
            expression: sev=="7"
      #......................................................................#
      # Common field conversions
      - cast:
          fields:
            - from.port
            - to.port
          to: int
      # Removing unused fields
      - delete:
          fields:
            - log.firePowerHeader
            - log.ciscoSeparator
            - log.irrelevant
            - log.syslogPri
            - log.rest
