# Deceptive Bytes filter
# Based on previous version of the same filter

pipeline:
  - dataTypes:
      - deceptive-bytes
    steps:
      # Using grok to parse header of the message
      - grok:
          patterns:
            - fieldName: log.syslogPriority
              pattern: '\<{{.data}}\>'
            - fieldName: log.syslogVersion
              pattern: '{{.integer}}'
            - fieldName: log.syslogDeviceTime
              pattern: '{{.year}}-{{.monthNumber}}-{{.monthDay}}\w{{.time}}\w'
            - fieldName: log.syslogHostIP
              pattern: '{{.ipv4}}|{{.ipv6}}|{{.word}}'
            - fieldName: log.notDefined
              pattern: '{{.integer}}'
            - fieldName: log.0trash
              pattern: '{{.word}}\:{{.integer}}'
            - fieldName: log.restData
              pattern: '{{.greedy}}'
          source: raw

      - grok:
          patterns:
            - fieldName: log.syslogPriority
              pattern: '\<{{.data}}\>'
            - fieldName: log.syslogDeviceTime
              pattern: '{{.year}}-{{.monthNumber}}-{{.monthDay}}\w{{.time}}\w'
            - fieldName: log.syslogHostIP
              pattern: '{{.ipv4}}|{{.ipv6}}|{{.word}}'
            - fieldName: log.0trash
              pattern: '{{.word}}\:{{.integer}}'
            - fieldName: log.restData
              pattern: '{{.greedy}}'
          source: raw

      - grok:
          patterns:
            - fieldName: log.syslogPriority
              pattern: '\<{{.data}}\>'
            - fieldName: log.syslogVersion
              pattern: '{{.integer}}'
            - fieldName: log.syslogDeviceTime
              pattern: '{{.year}}-{{.monthNumber}}-{{.monthDay}}\w{{.time}}\w'
            - fieldName: log.syslogHostIP
              pattern: '{{.ipv4}}|{{.ipv6}}|{{.word}}'
            - fieldName: log.0trash
              pattern: '{{.word}}\:{{.integer}}'
            - fieldName: log.restData
              pattern: '{{.greedy}}'
          source: raw

      - grok:
          patterns:
            - fieldName: log.syslogPriority
              pattern: '\<{{.data}}\>'
            - fieldName: log.syslogVersion
              pattern: '{{.integer}}'
            - fieldName: log.syslogDeviceTime
              pattern: '{{.year}}-{{.monthNumber}}-{{.monthDay}}\w{{.time}}\w'
            - fieldName: log.restData
              pattern: '{{.greedy}}'
          source: raw

      - grok:
          patterns:
            - fieldName: log.syslogPriority
              pattern: '\<{{.data}}\>'
            - fieldName: log.0trash
              pattern: '{{.word}}\:{{.integer}}'
            - fieldName: log.restData
              pattern: '{{.greedy}}'
          source: raw

      - grok:
          patterns:
            - fieldName: log.syslogPriority
              pattern: '\<{{.data}}\>'
            - fieldName: log.syslogVersion
              pattern: '{{.integer}}'
            - fieldName: log.syslogDeviceTime
              pattern: '{{.year}}-{{.monthNumber}}-{{.monthDay}}\w{{.time}}\w'
            - fieldName: log.syslogHostIP
              pattern: '{{.ipv4}}|{{.ipv6}}|{{.word}}'
            - fieldName: log.0trash
              pattern: '{{.word}}\:'
            - fieldName: log.userWithTrash
              pattern: '{{.data}}CEF'
            - fieldName: log.1trash
              pattern: '\:{{.integer}}'
            - fieldName: log.messageWithTrash
              pattern: '{{.data}}{{.word}}\={{.data}}{{.space}}'
            - fieldName: log.restData
              pattern: '{{.greedy}}'
          source: raw

      - grok:
          patterns:
            - fieldName: log.syslogPriority
              pattern: '\<{{.data}}\>'
            - fieldName: log.syslogDeviceTime
              pattern: '{{.year}}-{{.monthNumber}}-{{.monthDay}}\w{{.time}}\w'
            - fieldName: log.syslogHostIP
              pattern: '{{.ipv4}}|{{.ipv6}}|{{.word}}'
            - fieldName: log.0trash
              pattern: '{{.word}}\:'
            - fieldName: log.userWithTrash
              pattern: '{{.data}}CEF'
            - fieldName: log.1trash
              pattern: '\:{{.integer}}'
            - fieldName: log.messageWithTrash
              pattern: '{{.data}}{{.word}}\={{.data}}{{.space}}'
            - fieldName: log.restData
              pattern: '{{.greedy}}'
          source: raw

      - grok:
          patterns:
            - fieldName: log.user
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.userWithTrash

      - grok:
          patterns:
            - fieldName: log.message
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.restMessageToKv
              pattern: '{{.greedy}}'
          source: log.messageWithTrash

      # Parsing the common fields
      - grok:
          patterns:
            - fieldName: log.syslogPriority
              pattern: '\<{{.data}}\>'
            - fieldName: log.eventTime
              pattern: '{{.year}}-{{.monthNumber}}-{{.monthDay}}\w{{.time}}\w'
            - fieldName: log.restMessage
              pattern: '{{.greedy}}'
          source: raw

      - grok:
          patterns:
            - fieldName: log.syslogPriority
              pattern: '\<{{.data}}\>'
            - fieldName: log.eventTime
              pattern: '\[{{.year}}-{{.monthNumber}}-{{.monthDay}}{{.space}}{{.hour}}\:{{.minute}}\:{{.seconds}}'
            - fieldName: log.restMessage
              pattern: '{{.greedy}}'
          source: raw

      - grok:
          patterns:
            - fieldName: log.syslogPriority
              pattern: '\<{{.data}}\>'
            - fieldName: log.eventTime
              pattern: '{{.monthDay}}-{{.monthNumber}}{{.space}}{{.hour}}\:{{.minute}}\:{{.seconds}}'
            - fieldName: log.restMessage
              pattern: '{{.greedy}}'
          source: raw

      # Parse the restMessage field from the rest of the common fields
      - grok:
          patterns:
            - fieldName: log.processId
              pattern: '\,{{.integer}}'
            - fieldName: log.trheadId
              pattern: '\,\-'
            - fieldName: log.eventType
              pattern: '\,{{.integer}}'
            - fieldName: log.eventSource
              pattern: '\,{{.word}}'
            - fieldName: log.processName
              pattern: '\,{{.integer}}'
            - fieldName: log.processPath
              pattern: '\,{{.word}}'
            - fieldName: log.platform
              pattern: '\,{{.data}}\,'
            - fieldName: origin.path
              pattern: '{{.greedy}}\,'
            - fieldName: command
              pattern: '{{.greedy}}'
          source: log.restMessage

      - grok:
          patterns:
            - fieldName: log.processId
              pattern: '\,{{.integer}}'
            - fieldName: log.trheadId
              pattern: '\,{{.data}}\,'
            - fieldName: log.eventType
              pattern: '{{.integer}}'
            - fieldName: log.eventSource
              pattern: '\,\-'
            - fieldName: log.processName
              pattern: '\,{{.word}}\.{{.word}}'
          source: log.restMessage

      - grok:
          patterns:
            - fieldName: log.processId
              pattern: '\,{{.integer}}'
            - fieldName: log.trheadId
              pattern: '\,{{.data}}\,'
            - fieldName: log.eventType
              pattern: '{{.integer}}'
            - fieldName: log.eventSource
              pattern: '\,\-\,'
          source: log.restMessage

      - grok:
          patterns:
            - fieldName: log.severityLabelCharacter
              pattern: '{{.word}}\s'
            - fieldName: log.trheadId
              pattern: '{{.integer}}\,'
            - fieldName: log.eventSource
              pattern: '{{.integer}}\s'
            - fieldName: log.component
              pattern: '{{.word}}\,'
            - fieldName: log.errorCode
              pattern: '{{.integer}}\]'
            - fieldName: log.restDataMessage
              pattern: '{{.greedy}}'
          source: log.restMessage

      - grok:
          patterns:
            - fieldName: log.severityLabelCharacter
              pattern: '{{.word}}\s'
            - fieldName: log.trheadId
              pattern: '{{.integer}}\,'
            - fieldName: log.eventSource
              pattern: '{{.integer}}\s'
            - fieldName: log.component
              pattern: '{{.word}}\,'
            - fieldName: log.errorCode
              pattern: '{{.integer}}\]'
            - fieldName: log.message
              pattern: '{{.greedy}}'
          source: log.restMessage
          where:
            variables:
              - get: log.restMessage
                as: rest
                oftype: string
            expression: rest.contains("file")

      - grok:
          patterns:
            - fieldName: log.severityLabelCharacter
              pattern: '{{.word}}\s'
            - fieldName: log.trheadId
              pattern: '{{.integer}}\,'
            - fieldName: log.eventSource
              pattern: '{{.integer}}\s'
            - fieldName: log.component
              pattern: '{{.word}}\,'
            - fieldName: log.errorCode
              pattern: '{{.integer}}\]\s'
            - fieldName: origin.path
              pattern: '(?:[A-Z]:\\(?:[^\\\n]+\\)*[^\\\n]*|\/(?:[^\/\n]+\/)*[^\/\n]*)'
          source: log.restMessage
          where:
            variables:
              - get: log.severityLabelCharacter
                as: severityLabel
                oftype: string
            expression: severityLabel.contains("V")

      - grok:
          patterns:
            - fieldName: log.severityLabelCharacter
              pattern: '{{.word}}\s'
            - fieldName: log.processId
              pattern: '{{.integer}}\,'
            - fieldName: log.trheadId
              pattern: '{{.integer}}\s'
            - fieldName: log.methodName
              pattern: '\:\:{{.data}}\,'
            - fieldName: log.returnCode
              pattern: '{{.integer}}\]\s'
            - fieldName: log.detailedMessage
              pattern: '\({{.data}}\)'
          source: log.restMessage

      - grok:
          patterns:
            - fieldName: log.severityLabelCharacter
              pattern: '{{.word}}\s'
            - fieldName: log.processId
              pattern: '{{.integer}}\,'
            - fieldName: log.trheadId
              pattern: '{{.integer}}\s'
            - fieldName: log.methodName
              pattern: '{{.data}}\:\:{{.data}}\,'
            - fieldName: log.returnCode
              pattern: '{{.integer}}\]\s'
            - fieldName: log.message
              pattern: '{{.greedy}}'
          source: log.restMessage

      - grok:
          patterns:
            - fieldName: log.severityLabelCharacter
              pattern: '\[{{.data}}\]'
            - fieldName: log.processId
              pattern: '\[{{.integer}}\/'
            - fieldName: log.trheadId
              pattern: '{{.data}}\]:?\s'
            - fieldName: log.message
              pattern: '{{.greedy}}'
          source: log.restMessage

      # Using kv for the rest of the trash in the message
      - kv:
          fieldSplit: " "
          valueSplit: "="
          source: log.restMessageToKv

      # Using grok to analyze the rest of the data
      - grok:
          patterns:
            - fieldName: log.productVendor
              pattern: '\|{{.data}}\|'
            - fieldName: log.product
              pattern: '{{.data}}\|'
            - fieldName: log.productVersion
              pattern: '{{.data}}\|'
            - fieldName: log.signatureID
              pattern: '{{.data}}\|'
            - fieldName: log.eventType
              pattern: '{{.data}}\|'
            - fieldName: log.severity
              pattern: '{{.data}}\|'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.restData

      - grok:
          patterns:
            - fieldName: log.pidStatusToKv
              pattern: '\[{{.data}}\]'
            - fieldName: log.message
              pattern: '{{.greedy}}'
          source: log.restDataMessage

      - grok:
          patterns:
            - fieldName: log.0trash
              pattern: '{{.data}}PID='
            - fieldName: log.pid
              pattern: '{{.integer}}'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: raw
          where:
            variables:
              - get: log.severityLabelCharacter
                as: severityLabel
                oftype: string
            expression: severityLabel.contains("W")

      # Removing unnecessary characters
      - trim:
          function: prefix
          substring: '|'
          fields:
            - log.productVendor

      - trim:
          function: suffix
          substring: '|'
          fields:
            - log.productVendor
            - log.product
            - log.productVersion
            - log.signatureID
            - log.eventType
            - log.severity

      - trim:
          function: suffix
          substring: ':'
          fields:
            - log.trheadId

      - trim:
          function: suffix
          substring: '/'
          fields:
            - log.processId

      - trim:
          function: prefix
          substring: '<'
          fields:
            - log.syslogPriority

      - trim:
          function: suffix
          substring: '>'
          fields:
            - log.syslogPriority

      - trim:
          function: prefix
          substring: ','
          fields:
            - log.trheadId
            - log.processId
            - log.eventType
            - log.eventSource
            - log.processName
            - log.processPath
            - log.platform
            - origin.path

      - trim:
          function: suffix
          substring: ','
          fields:
            - log.trheadId
            - log.component
            - log.platform
            - origin.path
            - log.eventSource
            - log.processId
            - log.methodName

      - trim:
          function: prefix
          substring: '"'
          fields:
            - command

      - trim:
          function: suffix
          substring: '"'
          fields:
            - command

      - trim:
          function: prefix
          substring: '['
          fields:
            - log.eventTime
            - log.processId
            - log.severityLabelCharacter

      - trim:
          function: suffix
          substring: ']'
          fields:
            - log.status
            - log.errorCode
            - log.returnCode
            - log.severityLabelCharacter
            - log.trheadId

      # Using the kv filter with default config, usefull in key-value logs
      - kv:
          fieldSplit: " "
          valueSplit: "="
          source: log.restData

      # Using the kv filter with other config, usefull in key-value logs
      - kv:
          fieldSplit: ", "
          valueSplit: "="
          source: log.pidStatusToKv

      # Adding severity based on log.severityLabelCharacter
      - add:
          function: 'string'
          params:
            key: severity
            value: 'high'
          where:
            variables:
              - get: log.severityLabelCharacter
                as: severity
                ofType: string
            expression: severity_ok == true && (severity == "C" || severity == "A" || severity == "E")

      - add:
          function: 'string'
          params:
            key: severity
            value: 'medium'
          where:
            variables:
              - get: log.severityLabelCharacter
                as: severity
                ofType: string
            expression: severity_ok == true && severity == "W"

      - add:
          function: 'string'
          params:
            key: severity
            value: 'low'
          where:
            variables:
              - get: log.severityLabelCharacter
                as: severity
                ofType: string
            expression: severity_ok == true && (severity == "D" || severity == "V" || severity == "N" || severity == "I" || severity == "T")

      # Removing unused fields
      - delete:
          fields:
            - log.0trash
            - log.1trash
            - log.restData
            - log.restMessage
            - log.restDataMessage
            - log.irrelevant
            - log.messageWithTrash
            - log.restMessageToKv
            - log.pidStatusToKv
            - log.userWithTrash
            - log.severityLabelCharacter