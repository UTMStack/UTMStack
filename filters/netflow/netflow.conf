filter {

#Netflow filter bassed on https://www.cisco.com/en/US/technologies/tk648/tk362/technologies_white_paper09186a00800a3db9.html (february 2022)
#and http://www.iana.org/assignments/ipfix/ipfix.xhtml (february 2022)

#Filter version 2.0.1
   split {
     field => "message"
     terminator => "<utm-log-separator>"
   }

   #Looking for datasource generated by an agent and parse original message
   if [message]=~/\[utm_stack_agent_ds=(.+)\]-(.+)/ {
     grok {
       match => {
         "message" => [ "\[utm_stack_agent_ds=%{DATA:dataSource}\]-%{GREEDYDATA:original_log_message}" ]
       }
     }
   }
   if [original_log_message] {
     mutate {
       update => { "message" => "%{[original_log_message]}" }
     }
   }

   json {
     source => "message"
   }

   if [netflow]{
#......................................................................#
#Generating dataSource field required by CurrelationRulesEngine
#Checks if exists, if not evaluate to the host variable
   if (![dataSource]){
      mutate {
        add_field => { "dataSource" => "%{host}" }
      }
   }
#......................................................................# 
#Generating dataType field required by CurrelationRulesEngine
      mutate {
        add_field => { "dataType" => "netflow" }
      }
#......................................................................#
#Generating fields required by correlation rules
      mutate {
        #Netflows v9 fields
        rename => {"[netflow][l4_src_port]" => "[logx][netflow][src_port]"}
        rename => {"[netflow][ipv4_src_addr]" => "[logx][netflow][src_ip]"}
        rename => {"[netflow][l4_dst_port]" => "[logx][netflow][dest_port]"}
        rename => {"[netflow][ipv4_dst_addr]" => "[logx][netflow][dest_ip]"}
        rename => {"[netflow][protocol]" => "[logx][netflow][proto]"}

        #IPFIX fields
        rename => {"[netflow][sourceTransportPort]" => "[logx][netflow][src_port]"}
        rename => {"[netflow][sourceIPv4Address]" => "[logx][netflow][src_ip]"}
        rename => {"[netflow][destinationTransportPort]" => "[logx][netflow][dest_port]"}
        rename => {"[netflow][destinationIPv4Address]" => "[logx][netflow][dest_ip]"}
        rename => {"[netflow][protocolIdentifier]" => "[logx][netflow][proto]"}
      }
#......................................................................#
#Generating logx tree structure
      mutate {
        #Netflows fields
        rename => {"[netflow]" => "[logx][netflow]"}
      }
#......................................................................#
#Finally, remove unnecessary fields
   mutate {
      remove_field => ["@version","path"]
   }
}
   #Also, remove unwanted fields if the message not match with conditions
   mutate {
      remove_field => ["original_log_message","headers"]
   }
}
